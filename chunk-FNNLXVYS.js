import{a as E}from"./chunk-IWGSKPVT.js";import{a as v}from"./chunk-UWHUA5XG.js";import{a as h}from"./chunk-ACDW2MD6.js";import{e as f,f as j}from"./chunk-HLDYDQ4G.js";import{C as u,c as S,z as w}from"./chunk-CCDMTYGH.js";import{a as x,b,i as n}from"./chunk-OYAVQN5W.js";var a=class a{static openDB(){return new Promise((t,c)=>{let e=indexedDB.open(a.dbName,h.version);e.onupgradeneeded=s=>{let r=s.target.result;h.onUpgrade(r)},e.onsuccess=()=>{t(e.result)},e.onerror=()=>{c(e.error)}})}static setAll(t){return n(this,null,function*(){let c=yield a.openDB();return new Promise((e,s)=>{let o=c.transaction(a.storeName,"readwrite").objectStore(a.storeName),i=o.clear();i.onerror=()=>s(i.error),i.onsuccess=()=>{let d=0,g=t.length;t.forEach(m=>{let y=o.add(m);y.onerror=()=>s(y.error),y.onsuccess=()=>{d++,d===g&&e()}})}})})}static addRecords(t){return n(this,null,function*(){let c=yield a.openDB();return new Promise((e,s)=>{let r=c.transaction(a.storeName,"readwrite"),o=r.objectStore(a.storeName),i=0,d=t.length;t.forEach(g=>{let m=o.put(g);m.onerror=()=>s(m.error),m.onsuccess=()=>{i++,i===d&&e()}}),r.onerror=()=>s(r.error)})})}static getAll(){return n(this,null,function*(){let t=yield a.openDB();return new Promise((c,e)=>{let o=t.transaction(a.storeName,"readonly").objectStore(a.storeName).getAll();o.onsuccess=()=>{c(o.result)},o.onerror=()=>e(o.error)})})}static getLastSyncTime(){return n(this,null,function*(){try{let t=localStorage.getItem("playmate_lastExpenseSyncTime");return t?new Date(t):null}catch(t){return console.error("Error getting last expense sync time from localStorage:",t),null}})}static setLastSyncTime(t){return n(this,null,function*(){try{localStorage.setItem("playmate_lastExpenseSyncTime",t.toISOString())}catch(c){throw console.error("Error setting last expense sync time to localStorage:",c),c}})}};a.dbName=h.dbName,a.storeName="expenses";var l=a;var F=(()=>{let t=class t{constructor(e,s,r,o){this.api=e,this.clubContext=s,this.authService=r,this.googleSheetService=o,this.expensesSubject=new S([]),this.expenses$=this.expensesSubject.asObservable(),this.loadingSubject=new S(!1),this.loading$=this.loadingSubject.asObservable()}loadCachedData(){return n(this,null,function*(){try{let e=yield l.getAll();this.expensesSubject.next(e)}catch{this.expensesSubject.next([])}})}syncExpenses(){return n(this,null,function*(){this.loadingSubject.next(!0);try{console.log("Fetching expense data from Google Sheets...");let s=(yield this.googleSheetService.RefreshExpensesData()).map(r=>b(x({},r),{amount:Number(r.amount)||0}));console.log(`Fetched ${s.length} expense records from Google Sheets`),console.log("Processed expense records:",s),yield l.setAll(s),this.expensesSubject.next(s),yield l.setLastSyncTime(new Date),console.log("Successfully synced expense data from Google Sheets")}catch(e){console.error("Error syncing expenses:",e),this.expensesSubject.next([])}finally{this.loadingSubject.next(!1)}})}refreshData(){return n(this,null,function*(){yield this.syncExpenses()})}loadData(){return n(this,null,function*(){yield this.loadCachedData()})}addExpense(e){return n(this,null,function*(){var d;let r={id:"0",date:e.date||new Date().toISOString(),category:e.category||"",notes:e.notes||"",amount:Number(e.amount)||0,paymentType:"Cash",recordedBy:e.recordedBy||"",payee:e.payee||"",transactionId:e.transactionId||""},o=yield this.api.post("recordExpense",r);if(o.status==="error")throw new Error(((d=o.error)==null?void 0:d.message)||"Failed to record expense");yield l.addRecords([r]);let i=yield l.getAll();this.expensesSubject.next(i)})}};t.\u0275fac=function(s){return new(s||t)(u(E),u(j),u(f),u(v))},t.\u0275prov=w({token:t,factory:t.\u0275fac,providedIn:"root"});let p=t;return p})();export{F as a};
