name: Build and Deploy Frontend

on:
  push:
    branches:
      - main
    # paths:
    #   - 'frontend/**'  # Only trigger on changes in frontend directory
      
permissions:
  contents: write
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend  # Set working directory to frontend folder

    steps:
    - name: Use coturiv/setup-ionic
      uses: coturiv/setup-ionic@v1
      with:
        cordova-version: 8
        install-java: false
        install-pods: false

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        npm ci --legacy-peer-deps
        npm i -D -E @angular/cli --legacy-peer-deps

    - name: Inject Environment Variables
      run: |
        echo "export const environment = {" > src/environments/environment.prod.ts
        echo "  production: true," >> src/environments/environment.prod.ts
        echo "  apiUrl: '${{ secrets.API_URL }}'," >> src/environments/environment.prod.ts
        echo "  googleSignInClientId: '${{ secrets.GOOGLE_CLIENT_ID }}'," >> src/environments/environment.prod.ts
        echo "};" >> src/environments/environment.prod.ts

    - name: Build
      run: |
        # Clean build artifacts
        rm -rf www/
        # Run production build
        ionic build --prod -- --base-href 'https://app.gymmate.co.in'
        # Copy compiled index.html as 404.html for GitHub Pages SPA routing
        cp www/index.html www/404.html
        ls www

    - name: Add CNAME file
      run: echo 'app.gymmate.co.in' > www/CNAME

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: frontend/www
        commit_message: "Deploy frontend to GitHub Pages"
