import{a as B}from"./chunk-WMOUQLJV.js";import{e as v,f as k}from"./chunk-ON4Y6KJF.js";import{a as S}from"./chunk-35HGTZOU.js";import{B as b,Wa as j,Xa as D,Ya as x,c as g,k as p,y as I}from"./chunk-AAX3YNDZ.js";import{a as f,b as P,i}from"./chunk-OYAVQN5W.js";var l=(()=>{let o=class o{static openDB(){return console.log("[PaymentDB] Starting database open...",{name:o.dbName,version:S.version}),new Promise((t,e)=>{let r=indexedDB.open(o.dbName,S.version);r.onupgradeneeded=a=>{let n=a.target.result;S.onUpgrade(n)},r.onsuccess=()=>{let a=r.result;console.log("[PaymentDB] Database opened successfully",{name:a.name,version:a.version,objectStores:Array.from(a.objectStoreNames)}),t(a)},r.onerror=()=>{console.error("[PaymentDB] Error opening database:",r.error),e(r.error)}})}static setAll(t){return i(this,null,function*(){let e=yield o.openDB();return new Promise((r,a)=>{let s=e.transaction(o.storeName,"readwrite").objectStore(o.storeName),c=s.clear();c.onerror=()=>a(c.error),c.onsuccess=()=>{let d=0,m=t.length;t.forEach(h=>{let u=s.add(h);u.onerror=()=>a(u.error),u.onsuccess=()=>{d++,d===m&&r()}})}})})}static addRecords(t){return i(this,null,function*(){let e=yield o.openDB();return new Promise((r,a)=>{let n=e.transaction(o.storeName,"readwrite"),s=n.objectStore(o.storeName),c=0,d=t.length;t.forEach(m=>{let h=s.put(m);h.onerror=()=>a(h.error),h.onsuccess=()=>{c++,c===d&&r()}}),n.onerror=()=>a(n.error)})})}static getAll(){return i(this,null,function*(){let t=yield o.openDB();return new Promise((e,r)=>{let s=t.transaction(o.storeName,"readonly").objectStore(o.storeName).getAll();s.onsuccess=()=>{let c=s.result;e(c)},s.onerror=()=>r(s.error)})})}static getLastPaymentId(){return i(this,null,function*(){try{return localStorage.getItem("playmate_lastPaymentId")}catch(t){return console.error("Error getting last payment ID from localStorage:",t),null}})}static setLastPaymentId(t){return i(this,null,function*(){try{localStorage.setItem("playmate_lastPaymentId",t)}catch(e){throw console.error("Error setting last payment ID to localStorage:",e),e}})}static getLastSyncTime(){return i(this,null,function*(){try{let t=localStorage.getItem("playmate_lastSyncTime");return t?new Date(t):null}catch(t){return console.error("Error getting last sync time from localStorage:",t),null}})}static setLastSyncTime(t){return i(this,null,function*(){try{localStorage.setItem("playmate_lastSyncTime",t.toISOString())}catch(e){throw console.error("Error setting last sync time to localStorage:",e),e}})}static clearSettings(){try{localStorage.removeItem("playmate_lastPaymentId"),localStorage.removeItem("playmate_lastSyncTime")}catch(t){console.error("Error clearing payment settings from localStorage:",t)}}};o.dbName="PlayMateDB",o.storeName="payments",o.version=3;let y=o;return y})();var H=(()=>{let o=class o{constructor(t,e,r,a){this.http=t,this.authService=e,this.clubContext=r,this.memberService=a,this.apiUrl="https://script.google.com/macros/s/AKfycbyMDOC9nYxJv8mgpqE6i6VFF3UUy9NGPSTAGxXzihntX4KLXMnFz6moNR9ZcDJm3vZ2/dev",this.paymentsSubject=new g([]),this.summarySubject=new g(null),this.loadingSubject=new g(!1),this.lastSyncSubject=new g(null),this.payments$=this.paymentsSubject.asObservable(),this.summary$=this.summarySubject.asObservable(),this.loading$=this.loadingSubject.asObservable(),this.lastSync$=this.lastSyncSubject.asObservable(),this.paymentsSubject.next([]),this.summarySubject.next(null),this.loadingSubject.next(!1),this.lastSyncSubject.next(null),setTimeout(()=>this.loadCachedData(),1e3)}loadCachedData(){return i(this,null,function*(){try{console.log("Loading cached payment data...");let t=yield l.getAll(),e=yield l.getLastSyncTime();if(console.log("Cached payment records:",t.length),t.length>0){let r=yield this.linkWithMemberData(t);this.paymentsSubject.next(r),this.calculateSummary(r)}this.lastSyncSubject.next(e)}catch(t){console.error("Error loading cached data:",t)}})}initializeData(){return i(this,null,function*(){try{this.loadingSubject.next(!0),yield this.loadCachedData();let t=yield l.getLastSyncTime();(this.paymentsSubject.value.length===0||!t||new Date().getTime()-t.getTime()>5*60*1e3)&&this.syncPayments().catch(r=>{console.error("Background sync failed:",r)})}catch(t){console.error("Error initializing payment data:",t)}finally{this.loadingSubject.next(!1)}})}syncPayments(t=!1){return i(this,null,function*(){var e;try{this.loadingSubject.next(!0);let r=yield this.authService.getAuthToken(),a=this.clubContext.getSportsClubId()||"";console.log("Payment sync - Token:",r?"Present":"Missing"),console.log("Payment sync - Club ID:",a);let n={};if(!t){let u=yield l.getLastPaymentId();u&&(n.lastPaymentId=u)}let s=new D().set("action","getPayments").set("sportsClubId",a).set("authorization",r?"Bearer "+r:"");Object.keys(n).length>0&&(s=s.set("payload",JSON.stringify(n)));let d={headers:new j({"Content-Type":"text/plain;charset=utf-8"}),params:s,responseType:"json",observe:"body"},m=yield this.http.get(this.apiUrl,d).toPromise();if((m==null?void 0:m.status)==="error")throw new Error(((e=m.error)==null?void 0:e.message)||"API returned error status");if(!(m!=null&&m.data))throw new Error("No data received from API");let h=m.data;if(h&&h.length>0){let u=yield this.linkWithMemberData(h);t||!(yield l.getLastPaymentId())?yield l.setAll(u):yield l.addRecords(u);let M=Math.max(...u.map(N=>parseInt(N.id||"0"))).toString();yield l.setLastPaymentId(M),yield l.setLastSyncTime(new Date),this.lastSyncSubject.next(new Date);let w=yield l.getAll();this.paymentsSubject.next(w),this.calculateSummary(w)}}catch(r){throw console.error("Error syncing payments:",r),r}finally{this.loadingSubject.next(!1)}})}linkWithMemberData(t){return i(this,null,function*(){try{console.log("Linking payment records with member data:",t.length);let e=yield new Promise((a,n)=>{let s=setTimeout(()=>{console.warn("Member service timeout, proceeding without member data"),a([])},5e3);this.memberService.getMembers().subscribe({next:c=>{clearTimeout(s),console.log("Members fetched for linking:",c.members.length),a(c.members)},error:c=>{clearTimeout(s),console.error("Error fetching members:",c),a([])}})}),r=new Map(e.map(a=>[String(a.id).trim(),a]));return t.map(a=>{let n=String(a.memberId).trim(),s=r.get(n);return s||console.log(`No member found for ID: [${typeof a.memberId}] ${a.memberId}`),P(f({},a),{memberName:s?`${s.firstName} ${s.lastName}`.trim():`Unknown Member [${n}]`})})}catch(e){return console.error("Error linking member data:",e),t}})}calculateSummary(t){if(t.length===0){this.summarySubject.next(null);return}let e={totalPayments:t.length,totalAmount:0,uniqueMembers:new Set(t.map(r=>r.memberId)).size,monthBreakdown:{}};t.forEach(r=>{e.totalAmount+=r.amount;let n=new Date(r.date).toISOString().substring(0,7);e.monthBreakdown[n]||(e.monthBreakdown[n]={count:0,amount:0}),e.monthBreakdown[n].count++,e.monthBreakdown[n].amount+=r.amount}),this.summarySubject.next(e)}refreshData(){return i(this,null,function*(){yield this.syncPayments(),this.clubContext.setLastPaymentRefresh(new Date)})}loadData(){return i(this,null,function*(){yield this.initializeData()})}getPaymentsByMember(t){return this.payments$.pipe(p(e=>e.filter(r=>String(r.memberId)===t)))}getPaymentsByDateRange(t,e){return this.payments$.pipe(p(r=>r.filter(a=>{let n=new Date(a.date);return n>=t&&n<=e})))}getPaymentSummary(){return this.summarySubject.value||{totalPayments:0,totalAmount:0,uniqueMembers:0,monthBreakdown:{}}}};o.\u0275fac=function(e){return new(e||o)(b(x),b(v),b(k),b(B))},o.\u0275prov=I({token:o,factory:o.\u0275fac,providedIn:"root"});let y=o;return y})();export{H as a};
