import{a as f}from"./chunk-CXDPDJOD.js";import{e as x,f as w}from"./chunk-ON4Y6KJF.js";import{a as p}from"./chunk-35HGTZOU.js";import{B as m,c as S,y as g}from"./chunk-AAX3YNDZ.js";import{i as n}from"./chunk-OYAVQN5W.js";var r=class r{static openDB(){return new Promise((e,c)=>{let t=indexedDB.open(r.dbName,p.version);t.onupgradeneeded=s=>{let a=s.target.result;p.onUpgrade(a)},t.onsuccess=()=>{e(t.result)},t.onerror=()=>{c(t.error)}})}static setAll(e){return n(this,null,function*(){let c=yield r.openDB();return new Promise((t,s)=>{let o=c.transaction(r.storeName,"readwrite").objectStore(r.storeName),i=o.clear();i.onerror=()=>s(i.error),i.onsuccess=()=>{let d=0,y=e.length;e.forEach(u=>{let b=o.add(u);b.onerror=()=>s(b.error),b.onsuccess=()=>{d++,d===y&&t()}})}})})}static addRecords(e){return n(this,null,function*(){let c=yield r.openDB();return new Promise((t,s)=>{let a=c.transaction(r.storeName,"readwrite"),o=a.objectStore(r.storeName),i=0,d=e.length;e.forEach(y=>{let u=o.put(y);u.onerror=()=>s(u.error),u.onsuccess=()=>{i++,i===d&&t()}}),a.onerror=()=>s(a.error)})})}static getAll(){return n(this,null,function*(){let e=yield r.openDB();return new Promise((c,t)=>{let o=e.transaction(r.storeName,"readonly").objectStore(r.storeName).getAll();o.onsuccess=()=>{c(o.result)},o.onerror=()=>t(o.error)})})}static getLastSyncTime(){return n(this,null,function*(){try{let e=localStorage.getItem("playmate_lastExpenseSyncTime");return e?new Date(e):null}catch(e){return console.error("Error getting last expense sync time from localStorage:",e),null}})}static setLastSyncTime(e){return n(this,null,function*(){try{localStorage.setItem("playmate_lastExpenseSyncTime",e.toISOString())}catch(c){throw console.error("Error setting last expense sync time to localStorage:",c),c}})}};r.dbName=p.dbName,r.storeName="expenses";var l=r;var T=(()=>{let e=class e{constructor(t,s,a){this.api=t,this.clubContext=s,this.authService=a,this.expensesSubject=new S([]),this.expenses$=this.expensesSubject.asObservable(),this.loadingSubject=new S(!1),this.loading$=this.loadingSubject.asObservable()}loadCachedData(){return n(this,null,function*(){try{let t=yield l.getAll();this.expensesSubject.next(t)}catch{this.expensesSubject.next([])}})}syncExpenses(){return n(this,null,function*(){this.loadingSubject.next(!0);try{let t=this.clubContext.getSportsClubId()||"",s=yield this.api.get("getExpenses",t);s.status==="success"&&Array.isArray(s.data)?(yield l.setAll(s.data),this.expensesSubject.next(s.data),yield l.setLastSyncTime(new Date)):this.expensesSubject.next([])}catch{this.expensesSubject.next([])}finally{this.loadingSubject.next(!1)}})}refreshData(){return n(this,null,function*(){yield this.syncExpenses()})}loadData(){return n(this,null,function*(){yield this.loadCachedData()})}addExpense(t){return n(this,null,function*(){var d;let a={id:"0",date:t.date||new Date().toISOString(),category:t.category||"",notes:t.notes||"",amount:Number(t.amount)||0,paymentType:"Cash",recordedBy:t.recordedBy||"",payee:t.payee||"",transactionId:t.transactionId||""},o=yield this.api.post("recordExpense",a);if(o.status==="error")throw new Error(((d=o.error)==null?void 0:d.message)||"Failed to record expense");yield l.addRecords([a]);let i=yield l.getAll();this.expensesSubject.next(i)})}};e.\u0275fac=function(s){return new(s||e)(m(f),m(w),m(x))},e.\u0275prov=g({token:e,factory:e.\u0275fac,providedIn:"root"});let h=e;return h})();export{T as a};
