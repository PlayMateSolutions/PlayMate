import{a as h,b as g,i as m}from"./chunk-OYAVQN5W.js";var S=(()=>{let e=class e{static openDB(){return new Promise((t,n)=>{let c=indexedDB.open(e.dbName,e.version);c.onupgradeneeded=i=>{let o=i.target.result;if(!o.objectStoreNames.contains(e.storeName)){let a=o.createObjectStore(e.storeName,{keyPath:"id"});a.createIndex("memberId","memberId",{unique:!1}),a.createIndex("date","date",{unique:!1}),a.createIndex("membershipStatus","membershipStatus",{unique:!1}),a.createIndex("dateRange",["date","memberId"],{unique:!1})}},c.onsuccess=()=>t(c.result),c.onerror=()=>n(c.error)})}static getAll(){return m(this,null,function*(){let t=yield e.openDB();return new Promise((n,c)=>{let a=t.transaction(e.storeName,"readonly").objectStore(e.storeName).getAll();a.onsuccess=()=>{let r=a.result.map(s=>g(h({},s),{date:new Date(s.date),checkInTime:new Date(s.checkInTime),checkOutTime:s.checkOutTime?new Date(s.checkOutTime):void 0}));n(r)},a.onerror=()=>c(a.error)})})}static setAll(t){return m(this,null,function*(){let n=yield e.openDB();return new Promise((c,i)=>{var d;let o=n.transaction(e.storeName,"readwrite"),a=o.objectStore(e.storeName);a.clear();for(let r of t){let s=g(h({},r),{id:(d=r.id)!=null?d:r.ID,date:new Date(r.date),checkInTime:new Date(r.checkInTime),checkOutTime:r.checkOutTime?new Date(r.checkOutTime):void 0});a.put(s)}o.oncomplete=()=>c(),o.onerror=()=>i(o.error)})})}static addRecords(t){return m(this,null,function*(){let n=yield e.openDB();return new Promise((c,i)=>{var d;let o=n.transaction(e.storeName,"readwrite"),a=o.objectStore(e.storeName);for(let r of t){let s=g(h({},r),{id:(d=r.id)!=null?d:r.ID,date:new Date(r.date),checkInTime:new Date(r.checkInTime),checkOutTime:r.checkOutTime?new Date(r.checkOutTime):void 0});a.put(s)}o.oncomplete=()=>c(),o.onerror=()=>i(o.error)})})}static getByDateRange(t,n){return m(this,null,function*(){let c=yield e.openDB();return new Promise((i,o)=>{let r=c.transaction(e.storeName,"readonly").objectStore(e.storeName).index("date"),s=IDBKeyRange.bound(t,n),l=r.getAll(s);l.onsuccess=()=>{let w=l.result.map(I=>g(h({},I),{date:new Date(I.date),checkInTime:new Date(I.checkInTime),checkOutTime:I.checkOutTime?new Date(I.checkOutTime):void 0}));i(w)},l.onerror=()=>o(l.error)})})}static getByMemberId(t){return m(this,null,function*(){let n=yield e.openDB();return new Promise((c,i)=>{let r=n.transaction(e.storeName,"readonly").objectStore(e.storeName).index("memberId").getAll(t);r.onsuccess=()=>{let l=r.result.map(u=>g(h({},u),{date:new Date(u.date),checkInTime:new Date(u.checkInTime),checkOutTime:u.checkOutTime?new Date(u.checkOutTime):void 0}));c(l)},r.onerror=()=>i(r.error)})})}static getLastAttendanceId(){return m(this,null,function*(){try{return localStorage.getItem("playmate_lastAttendanceId")}catch(t){return console.error("Error getting last attendance ID from localStorage:",t),null}})}static setLastAttendanceId(t){return m(this,null,function*(){try{localStorage.setItem("playmate_lastAttendanceId",t)}catch(n){throw console.error("Error setting last attendance ID to localStorage:",n),n}})}static getLastSyncTime(){return m(this,null,function*(){try{let t=localStorage.getItem("playmate_lastSyncTime");return t?new Date(t):null}catch(t){return console.error("Error getting last sync time from localStorage:",t),null}})}static setLastSyncTime(t){return m(this,null,function*(){try{localStorage.setItem("playmate_lastSyncTime",t.toISOString())}catch(n){throw console.error("Error setting last sync time to localStorage:",n),n}})}static clearSettings(){try{localStorage.removeItem("playmate_lastAttendanceId"),localStorage.removeItem("playmate_lastSyncTime")}catch(t){console.error("Error clearing attendance settings from localStorage:",t)}}};e.dbName="PlayMateDB",e.storeName="attendance",e.version=3;let y=e;return y})();export{S as a};
